class Solution:
    def permuteUnique(self, nums: List[int]) -> List[List[int]]:
        ans = []
        nums.sort()
        seen = set()
        self.dfs(nums, seen, [], ans)
        return ans
    
    def dfs(self, nums, seen, curr, ans):
        if len(curr) == len(nums):
            ans.append(curr.copy())
            return 
        
        for i in range(0, len(nums)):
            if i in seen:
                continue
            if i>0 and (i-1) not in seen and nums[i] == nums[i-1]: #unique permutations
                continue
            seen.add(i)
            curr.append(nums[i])
            self.dfs(nums, seen, curr, ans)
            curr.pop()
            seen.remove(i)
