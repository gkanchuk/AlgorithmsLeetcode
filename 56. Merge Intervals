class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        
        if len(intervals) <= 1:
            return intervals
        intervals.sort( key = lambda a:a[0])
        doubleLL  = deque( )
        doubleLL.append(intervals[0])
        for  i in range(1,len(intervals)):
            prev = doubleLL[-1][1]
            nxt =  intervals[i][0]
            if( self.overLap(prev,nxt)):
                ele = doubleLL.pop()
                ele[0] = min(ele[0],intervals[i][0] )
                ele[1] = max(ele[1],intervals[i][1] )
                doubleLL.append(ele)
            else:
                doubleLL.append(intervals[i])
        return  doubleLL
    
    def overLap( self, prev:int,nxt:int) -> bool:
        if nxt  <= prev :
            return True
        return False
