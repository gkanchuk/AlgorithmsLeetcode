/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if (head == NULL )
        {
            return  NULL;
        }
        
        Node* orgHead = head;
        while (orgHead != NULL)
        {
             Node* copy = new Node(orgHead->val);
             copy->next = orgHead->next;
             orgHead->next = copy;
             orgHead = copy->next;
        }
        orgHead = head;
        while  (orgHead  != NULL)  
        {
            orgHead->next->random = (orgHead->random != NULL) ? orgHead->random->next : NULL;
            orgHead = orgHead->next->next;
        }
        Node*  old_list = head;
        Node*  new_list = head->next;
        Node* copy_head  =  head->next;
        while (old_list != NULL)
        {
            old_list->next = old_list->next->next;
            new_list->next = new_list->next != NULL ? new_list->next->next : NULL;
            old_list = old_list->next;
            new_list  = new_list->next;
                
        }
        return copy_head;
        
            
    }
};
