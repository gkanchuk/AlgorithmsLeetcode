class Solution:
    
    def minPathSum(self, grid: List[List[int]]) -> int:
        if(not grid):
            return  0
        cols = len(grid[0])
        rows = len(grid)
        if(rows == 1): return sum(grid[0])
        if(cols == 0): return sum(grid)
        DP =    [[0 for i in range(cols)] for  j in range(rows)]
        
        colSum = 0
        for col in range(0, cols,1):
            colSum = colSum +  grid[0][col]
            DP[0][col] = colSum

        rowSum = 0
        for row in range(0, rows,1):
            rowSum = rowSum + grid[row][0]
            DP[row][0] = rowSum
        
        for row in range(1,rows):
            for col in range(1,cols):
                DP[row][col]  = grid[row][col]+ min(DP[row][col-1],DP[row-1][col])
        
                
        return DP[-1][-1]
            
