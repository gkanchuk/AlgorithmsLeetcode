/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
       int nums_len = size(nums);
        return recursionDFS(nums, 0, nums_len-1 );
        
        
    }
    
    TreeNode* recursionDFS(  vector<int>& nums,int start,int end ) {
        
            
            int mid  = (start+end)/2;
            if (  start > end ){
                return NULL;
            }
            TreeNode* root = new  TreeNode(nums[mid]);
            root->left = recursionDFS(nums,start, mid -1);
            root->right = recursionDFS(nums, mid+1, end);
            return root;
            

        
        
    }
};
