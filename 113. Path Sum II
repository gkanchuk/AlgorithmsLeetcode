/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
private:
    int m_target  = 0;
public:
    
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        
        if (root == NULL) return {};
        
        
        m_target = sum;

        vector<int> path;
        vector<vector<int>> result;
        int total_sum = 0;
        DFS(root, result,path,total_sum );
        return result;
    }
    
    void DFS( TreeNode* root,  vector<vector<int>> &result, vector<int> v, int sum) 
    {
        if  (root == NULL) return;
        
        sum = sum + root->val;
        v.push_back(root->val);
        if ( (root->left == NULL) && (root->right == NULL) && (sum == m_target)  )
        {
            result.push_back(v);
            return;
        }
        
        // vector<int> t (v.begin(), v.end());
        // v.push-back(root->val)
        DFS( root->left , result, v, sum);
        DFS( root->right , result, v, sum);
        v.pop_back();

            
            
    
        
    }
};
