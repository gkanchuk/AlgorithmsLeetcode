class Solution:
    def backspaceCompare(self, S: str, T: str) -> bool:
        
        if( not S and not T):
                return  True
        i =  len(S)-1
        j =  len(T)-1
        skipS  = 0
        skipT =  0
        
        
        while( i >= 0 or j >= 0 ):
            
            while( i >= 0 ): 
                if(S[i] == "#"):
                        skipS = skipS + 1
                        i =  i-1
                elif( skipS  >  0):
                        skipS = skipS - 1
                        i  =  i-1
                else:
                    break
                    
            while( j >= 0 ): 
                if(T[j] == "#"):
                        skipT = skipT + 1
                        j =  j-1
                elif( skipT  >  0):
                        skipT = skipT - 1
                        j  =  j-1
                else:
                    break

            if(  i>= 0  and j >=0  and S[i] != T[j]):
                    return  False
            if( (i < 0 and j>=0) or (j <  0 and i>=0)):
                return False
            i  = i-1
            j  = j-1
                    
        return True
            
                
                
            
                    
        
#         res1 = self.backSpace(S)
#         res2 = self.backSpace(T)
#         return res2 ==  res1
        
#     def  backSpace(self, S: str) -> str:
#         res = []
#         for ele in S:
#             if(ele is '#'):
#                 if(res):
#                     res.pop()
#             else:
#                 res +=  ele
#         return str(res)
        
        
        
            
                
        
