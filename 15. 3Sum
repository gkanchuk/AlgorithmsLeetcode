class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        result_set = set()
        nums.sort()
        for i in range(len(nums)):
            #[-1,-1,0,1,2] avoid duplicate target
            if(i-1 >  0 and  nums[i-1] == nums[i]):
                continue
            print(nums[i],nums[i-1])
            left =  i+1
            right = len(nums) -1
            while( left <  right ):
                total = nums[i]+nums[left]+nums[right]
                if(total == 0):
                    temp_list =  ( nums[i],nums[left],nums[right] )
                    #using set and list doesnot matter, the main goal here is to avoid  further computation and verification
                    result_set.add(temp_list) 
                    #[-1,0,0,1,1] avoid duplicate pairs with target
                    while(left  < right and nums[left] == nums[left+1]):
                        left = left+1
                    while(left  < right and nums[right] == nums[right-1]):
                        right = right -1                             
                    left = left + 1
                    right = right -1    
                elif( total  < 0):
                    left = left + 1
                elif(total > 0):
                    right = right -1
            
        return result_set
