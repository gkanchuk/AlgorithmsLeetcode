class Codec:

	def serialize(self, root):
		"""Encodes a tree to a single string.

		:type root: TreeNode
		:rtype: str
		"""
		import collections
		if not root:
			return ''
		q=collections.deque([root])
		res=[]
		while q:
			node=q.popleft()
			if node:
				res.append(str(node.val))
				q.append(node.left)
				q.append(node.right)
			if not node:
				res.append('#')
		return ','.join(res)



	def deserialize(self, data):
		"""Decodes your encoded data to tree.

		:type data: str
		:rtype: TreeNode
		"""
		import collections
		if not data:
			return None
		index=1
		tem=data.split(',')
		root=TreeNode(tem[0])
		q=collections.deque([root])
		while q:
			node=q.popleft()
			if tem[index]!='#':
				node.left=TreeNode(tem[index])
				q.append(node.left)
			index+=1
			if tem[index]!='#':
				node.right=TreeNode(tem[index])
				q.append(node.right)
			index+=1
		return root
