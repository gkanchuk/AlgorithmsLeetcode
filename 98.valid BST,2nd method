# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    #in BST, the inorder  transerval always give ascending order of the tree
    def isValidBST(self, root: TreeNode) -> bool:
        if(not root):
            return True
        minVal = float('-inf')
        maxVal = float('inf')
        return self.util(root,minVal ,maxVal)
    
    def  util(self, root: TreeNode, minVal, maxVal  ) -> bool:
        
        if not root:
            return  True
        if root.val > minVal and  root.val < maxVal  and  self.util(root.left, minVal,root.val) and self.util(root.right, root.val , maxVal):
            return  True
        return False
        
